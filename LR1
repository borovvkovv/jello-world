
public class Program
{
static Mutex mutex = new Mutex();
static int Trigger = 0;
public static string resource = "";
static void UseResource(bool IsReader, object Num)
	{
		if (IsReader)
		{
			if (Trigger == 0)
			Console.WriteLine("Читатель №"+Num+" прочитал: "+resource);
		}
		else
		{
			mutex.WaitOne();
			Trigger = 1;
			Console.WriteLine("Писатель №"+Num+ " занял ресурс");
			resource = "Запись писателя "+Num;
			Console.WriteLine("Писатель №"+Num+" записал: "+resource);
			Thread.Sleep(2000);
			Console.WriteLine("Писатель №"+Num+ " освободил ресурс");
			mutex.ReleaseMutex();
			Trigger = 0;
		}
	}
	static void Reader(object Num)
	{
		Random rnd = new Random();
		while (true)
		{
			Thread.Sleep(rnd.Next(1000,5000));
			UseResource(true,Num);
		}
	}
	
	static void Writer(object Num)
	{
		Random rnd = new Random();
		while (true)
		{
			Thread.Sleep(rnd.Next(15000,40000));
			UseResource(false,Num);

		}
	}
	static void Main(string[] args)
	{
		Console.WriteLine("Задачйте количество читателей:");
		uint Readers;
		uint n;
		while (!UInt32.TryParse(Console.ReadLine(), out n))
			Console.WriteLine("Некорректный ввод, попробуте еще раз.");
		Readers = n;
		
		Console.WriteLine("Задачйте количество писателей:");
		uint Writers;
		while (!UInt32.TryParse(Console.ReadLine(), out n))
			Console.WriteLine("Некорректный ввод, попробуте еще раз.");
		Writers = n;
		
		for (int i=0; i<Readers; i++)
		{
			new Thread(Program.Reader).Start(i);
			Thread.Sleep(10);
		}
		
		for (int i=0; i<Writers; i++)
		{
			new Thread(Program.Writer).Start(i);
			Thread.Sleep(10);
		}
	}
	
	
	// Define other methods and classes here
}
